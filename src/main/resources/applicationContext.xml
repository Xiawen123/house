<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!--1. spring整合mybatis-->
    <!--读取配置文件  properties-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!--2.配置数据源:dataSource  据库连接池 c3p0-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 3.配置事务管理器 -->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--4. 开启事务的注解驱动 -->
    <tx:annotation-driven transaction-manager="tx"/>

    <!--spring管理mybatis配置文件 -->
    <!--5.定义sqlSessionFactory 工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引用数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--引用mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--映射(逆向生成)之后解开-->
        <property name="mapperLocations" value="classpath:com/team/house/mapper/*.xml"/>
    </bean>

    <!-- 6. spring管理mybatis映射接口和sql映射文件之间关联关系-->
    <!--生成dao接口的实现bean对象 生成的bean对象id就是接口名称首字母小写-->
    <bean id="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描dao层所有的接口并生成bean对象-->
        <property name="basePackage" value="com.team.house.mapper"/>

        <!--添加sqlSessionfactroy-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

    </bean>

    <!-- 7. 扫描业务层组件-->
    <context:component-scan base-package="com.team.house.service.impl"/>



</beans>